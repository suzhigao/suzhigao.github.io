{"title":"奖学金问题","slug":"P1093 奖学金问题","date":"2020-10-28T13:33:07.829Z","updated":"2020-10-28T14:28:54.231Z","comments":true,"path":"api/articles/P1093 奖学金问题.json","excerpt":"C++中的sort()排序函数用法简单介绍sort(first_pointer,first_pointer+n,cmp) :该函数可以给数组、链表、向量排序。","covers":null,"content":"<h2 id=\"C-中的sort-排序函数用法简单介绍\"><a href=\"#C-中的sort-排序函数用法简单介绍\" class=\"headerlink\" title=\"C++中的sort()排序函数用法简单介绍\"></a>C++中的sort()排序函数用法简单介绍</h2><p>sort(first_pointer,first_pointer+n,cmp) :该函数可以给<strong>数组</strong>、<strong>链表</strong>、<strong>向量</strong>排序。<a id=\"more\"></a><br>实现原理：sort不是简单的快速排序，他对普通的快速排序进行了优化，而且他还结合了插入排序和堆排序，系统会根据你的数据形式和数据量自动选择合适的排序算法。<br>这并不是说它每次排序只选择一种方法，它是在一次完整排序中不同的情况选用不同方法，比如给一个数据量较大的数组排序，开始采用快速排序，分段递归，分段之后每一段的数据量达到一个较小值后它就不继续往下递归，而是选择插入排序，如果递归的太深，他会选择堆排序。<br><strong>该函数的三个参数：</strong><br>参数1：数组的首地址（一般是数组名即可，因为数组名是一个指针常量）<br>参数2：首地址加上数组的长度n，代表尾地址的下一个地址<br>参数3：默认可以不填，如果不填sort会默认按数组升序排序，也可以自己定义一个排序函数，按照自己的需求来排序</p>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><blockquote>\n<p>某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5名学生发奖学金。期末，每个学生都有3门课的成绩:语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学 排在前面，这样，每个学生的排序是唯一确定的。</p>\n</blockquote>\n<p>任务：先根据输入的3门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前五名名学生的学号和总分。注意，在前5名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数:学号、总分) 是:</p>\n<blockquote>\n<p>7 279<br>5 279</p>\n</blockquote>\n<p>这两行数据的含义是:总分最高的两个同学的学号依次是7号、5号。这两名同学的总分都是 279 (总分等于输入的语文、数学、英语三科成绩之和) ，但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是:</p>\n<blockquote>\n<p>5 279<br>7 279</p>\n</blockquote>\n<p>则按输出错误处理，不能得分。</p>\n<p><strong>输入格式</strong><br>共n+1行。</p>\n<p>第1行为一个正整数n(≤300)，表示该校参加评选的学生人数。</p>\n<p>第2到n+1行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为j-1的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1~n（恰好是输入数据的行号减1）。</p>\n<p>所给的数据都是正确的，不必检验。</p>\n<p><strong>输出格式</strong><br>共5行，每行是两个用空格隔开的正整数，依次表示前5名学生的学号和总分。</p>\n<h3 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h3><p>输入 #1 </p>\n<blockquote>\n<p>6<br>90 67 80<br>87 66 91<br>78 89 91<br>88 99 77<br>67 89 64<br>78 89 98</p>\n</blockquote>\n<p>输出 #1 </p>\n<blockquote>\n<p>6 265<br>4 264<br>3 258<br>2 244<br>1 237</p>\n</blockquote>\n<p>输入 #2</p>\n<blockquote>\n<p>8<br>80 89 89<br>88 98 78<br>90 67 80<br>87 66 91<br>78 89 91<br>88 99 77<br>67 89 64<br>78 89 98</p>\n</blockquote>\n<p>输出 #2 </p>\n<blockquote>\n<p>8 265<br>2 264<br>6 264<br>1 258<br>5 258</p>\n</blockquote>\n<hr>\n<p>这是一道结构体类型的题目</p>\n<hr>\n<hr>\n<h2 id=\"关键点：\"><a href=\"#关键点：\" class=\"headerlink\" title=\"关键点：\"></a>关键点：</h2><p>1.定义一个结构体，将语数英成绩，序号，学号放入其中;<br>2.定义一个按照要求排序的函数；<br>（适当地注释和一目了然的变量名称很重要噢）</p>\n<hr>\n<p>完整代码如下，希望能帮到你。  </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">student</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> chinese; <span class=\"comment\">//语文成绩</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> math; <span class=\"comment\">//数学成绩</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> english; <span class=\"comment\">//英语成绩</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> num; <span class=\"comment\">//序号</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>; <span class=\"comment\">//总分</span></span><br><span class=\"line\">&#125;s[<span class=\"number\">301</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cmp</span><span class=\"params\">(student p1, student p2)</span> </span>&#123;<span class=\"comment\">//结构体</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p1.sum == p2.sum &amp;&amp; p1.chinese != p2.chinese) &#123;<span class=\"comment\">//总分相同，语文成绩高排在前</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.chinese &gt; p2.chinese;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p1.sum == p2.sum &amp;&amp; p1.chinese == p2.chinese) &#123;<span class=\"comment\">//总分相同，语文成绩相同，序号小在前</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.num &lt; p2.num;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;<span class=\"comment\">//否则总分越高在越前</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.sum &gt; p2.sum;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;<span class=\"comment\">//人数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\ts[i].num = i;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s[i].chinese &gt;&gt; s[i].math &gt;&gt; s[i].english;</span><br><span class=\"line\">\t\ts[i].sum = s[i].chinese + s[i].math + s[i].english;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(<span class=\"number\">1</span> + s, <span class=\"number\">1</span> + n + s, cmp);<span class=\"comment\">//排序</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;<span class=\"comment\">//输出前5名</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; s[i].num &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; s[i].sum &lt;&lt; <span class=\"built_in\">endl</span>;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","more":"<br>实现原理：sort不是简单的快速排序，他对普通的快速排序进行了优化，而且他还结合了插入排序和堆排序，系统会根据你的数据形式和数据量自动选择合适的排序算法。<br>这并不是说它每次排序只选择一种方法，它是在一次完整排序中不同的情况选用不同方法，比如给一个数据量较大的数组排序，开始采用快速排序，分段递归，分段之后每一段的数据量达到一个较小值后它就不继续往下递归，而是选择插入排序，如果递归的太深，他会选择堆排序。<br><strong>该函数的三个参数：</strong><br>参数1：数组的首地址（一般是数组名即可，因为数组名是一个指针常量）<br>参数2：首地址加上数组的长度n，代表尾地址的下一个地址<br>参数3：默认可以不填，如果不填sort会默认按数组升序排序，也可以自己定义一个排序函数，按照自己的需求来排序</p>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><blockquote>\n<p>某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5名学生发奖学金。期末，每个学生都有3门课的成绩:语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学 排在前面，这样，每个学生的排序是唯一确定的。</p>\n</blockquote>\n<p>任务：先根据输入的3门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前五名名学生的学号和总分。注意，在前5名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数:学号、总分) 是:</p>\n<blockquote>\n<p>7 279<br>5 279</p>\n</blockquote>\n<p>这两行数据的含义是:总分最高的两个同学的学号依次是7号、5号。这两名同学的总分都是 279 (总分等于输入的语文、数学、英语三科成绩之和) ，但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是:</p>\n<blockquote>\n<p>5 279<br>7 279</p>\n</blockquote>\n<p>则按输出错误处理，不能得分。</p>\n<p><strong>输入格式</strong><br>共n+1行。</p>\n<p>第1行为一个正整数n(≤300)，表示该校参加评选的学生人数。</p>\n<p>第2到n+1行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为j-1的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1~n（恰好是输入数据的行号减1）。</p>\n<p>所给的数据都是正确的，不必检验。</p>\n<p><strong>输出格式</strong><br>共5行，每行是两个用空格隔开的正整数，依次表示前5名学生的学号和总分。</p>\n<h3 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h3><p>输入 #1 </p>\n<blockquote>\n<p>6<br>90 67 80<br>87 66 91<br>78 89 91<br>88 99 77<br>67 89 64<br>78 89 98</p>\n</blockquote>\n<p>输出 #1 </p>\n<blockquote>\n<p>6 265<br>4 264<br>3 258<br>2 244<br>1 237</p>\n</blockquote>\n<p>输入 #2</p>\n<blockquote>\n<p>8<br>80 89 89<br>88 98 78<br>90 67 80<br>87 66 91<br>78 89 91<br>88 99 77<br>67 89 64<br>78 89 98</p>\n</blockquote>\n<p>输出 #2 </p>\n<blockquote>\n<p>8 265<br>2 264<br>6 264<br>1 258<br>5 258</p>\n</blockquote>\n<hr>\n<p>这是一道结构体类型的题目</p>\n<hr>\n<hr>\n<h2 id=\"关键点：\"><a href=\"#关键点：\" class=\"headerlink\" title=\"关键点：\"></a>关键点：</h2><p>1.定义一个结构体，将语数英成绩，序号，学号放入其中;<br>2.定义一个按照要求排序的函数；<br>（适当地注释和一目了然的变量名称很重要噢）</p>\n<hr>\n<p>完整代码如下，希望能帮到你。  </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">student</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> chinese; <span class=\"comment\">//语文成绩</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> math; <span class=\"comment\">//数学成绩</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> english; <span class=\"comment\">//英语成绩</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> num; <span class=\"comment\">//序号</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>; <span class=\"comment\">//总分</span></span><br><span class=\"line\">&#125;s[<span class=\"number\">301</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cmp</span><span class=\"params\">(student p1, student p2)</span> </span>&#123;<span class=\"comment\">//结构体</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p1.sum == p2.sum &amp;&amp; p1.chinese != p2.chinese) &#123;<span class=\"comment\">//总分相同，语文成绩高排在前</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.chinese &gt; p2.chinese;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p1.sum == p2.sum &amp;&amp; p1.chinese == p2.chinese) &#123;<span class=\"comment\">//总分相同，语文成绩相同，序号小在前</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.num &lt; p2.num;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;<span class=\"comment\">//否则总分越高在越前</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.sum &gt; p2.sum;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;<span class=\"comment\">//人数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\ts[i].num = i;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s[i].chinese &gt;&gt; s[i].math &gt;&gt; s[i].english;</span><br><span class=\"line\">\t\ts[i].sum = s[i].chinese + s[i].math + s[i].english;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(<span class=\"number\">1</span> + s, <span class=\"number\">1</span> + n + s, cmp);<span class=\"comment\">//排序</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;<span class=\"comment\">//输出前5名</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; s[i].num &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; s[i].sum &lt;&lt; <span class=\"built_in\">endl</span>;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"},{"name":"ACM","path":"api/tags/ACM.json"}]}