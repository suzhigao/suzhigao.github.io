{"title":"测试函数运行时间","slug":"测试运行时间","date":"2020-05-01T05:17:46.000Z","updated":"2020-07-08T15:49:12.163Z","comments":true,"path":"api/articles/测试运行时间.json","excerpt":"时间就是金钱，效率就是生命！程序的好坏一定程度上取决于它的执行效率。","covers":null,"content":"<p>时间就是金钱，效率就是生命！程序的好坏一定程度上取决于它的执行效率。<a id=\"more\"></a><br><br>这是我在网上找到的一个通过函数测试函数执行时间的方法，这个应该是比较原始的，可能编译器也有这个功能了。但是深入去理解一些东西还是好的，我觉得这也是我要努力的方向。<br></p>\n<h2 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clock():捕捉从程序开始运行到clock()被调用时所耗费的时间。这个时间单位是clock tick，即“时钟打点”。</span><br><span class=\"line\">常数CLK_TCK:机器时钟每秒所走的时钟打点数。</span><br></pre></td></tr></table></figure>\n<h3 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">clock_t</span> start, stop;<span class=\"comment\">//clock_t是clock()函数返回的变量类型</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> duration;<span class=\"comment\">//记录函数运行时间，以秒为单位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintN</span><span class=\"params\">(<span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//不在测试范围内的准备工作写在clock()调用之前</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintN</span><span class=\"params\">(<span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (N) &#123;</span><br><span class=\"line\">\t\tPrintN(N - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; N &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> N;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; N;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstart = clock();</span><br><span class=\"line\">\tPrintN(N);</span><br><span class=\"line\">\tstop = clock();</span><br><span class=\"line\">\tduration = ((<span class=\"keyword\">double</span>)(stop - start)) / CLK_TCK;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; duration &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*其他不在测试范围的处理写在后面，例如输出duration*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是一个递归程序，经测试递归程序略慢于普通的循环，而且当N大于等于100000时递归程序崩溃了，栈溢出了。<br><br>因此尽管递归有它的优点，但选择递归时要慎重。<br></p>\n","more":"<br><br>这是我在网上找到的一个通过函数测试函数执行时间的方法，这个应该是比较原始的，可能编译器也有这个功能了。但是深入去理解一些东西还是好的，我觉得这也是我要努力的方向。<br></p>\n<h2 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clock():捕捉从程序开始运行到clock()被调用时所耗费的时间。这个时间单位是clock tick，即“时钟打点”。</span><br><span class=\"line\">常数CLK_TCK:机器时钟每秒所走的时钟打点数。</span><br></pre></td></tr></table></figure>\n<h3 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">clock_t</span> start, stop;<span class=\"comment\">//clock_t是clock()函数返回的变量类型</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> duration;<span class=\"comment\">//记录函数运行时间，以秒为单位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintN</span><span class=\"params\">(<span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//不在测试范围内的准备工作写在clock()调用之前</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintN</span><span class=\"params\">(<span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (N) &#123;</span><br><span class=\"line\">\t\tPrintN(N - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; N &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> N;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; N;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstart = clock();</span><br><span class=\"line\">\tPrintN(N);</span><br><span class=\"line\">\tstop = clock();</span><br><span class=\"line\">\tduration = ((<span class=\"keyword\">double</span>)(stop - start)) / CLK_TCK;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; duration &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*其他不在测试范围的处理写在后面，例如输出duration*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是一个递归程序，经测试递归程序略慢于普通的循环，而且当N大于等于100000时递归程序崩溃了，栈溢出了。<br><br>因此尽管递归有它的优点，但选择递归时要慎重。<br></p>","categories":[],"tags":[{"name":"c/c++","path":"api/tags/c/c++.json"}]}